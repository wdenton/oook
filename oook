#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

# This file is part of oook.
#
# oook is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# oook is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with oook.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2013 William Denton

# CONFIGURING
#
# Configuration details are set in the file config.json.
# Make a copy of config.json.example and edit it.

require 'json'
require 'logger'
require 'optparse'

require 'rubygems'
require 'twitter'

options = {}
options[:verbose] = false
options[:notweet] = false
OptionParser.new do |opts|
  opts.banner = "Usage: oook [--notweet] [--verbose]"
  opts.on("--notweet", "Do not actually tweet anything") { options[:notweet] = true }
  opts.on("--verbose", "Be verbose") { options[:verbose] = true }
end.parse!

logger = Logger.new(STDOUT)
if options[:verbose]
  logger.level = Logger::DEBUG
else
  logger.level = Logger::INFO
end

if options[:notweet]
  logger.info "--notweet specified; no tweeting will happen"
end

settings = {}

begin
  settings = JSON.parse(File.read("config.json"))
rescue Exception => e
  STDERR.puts "No readable config.json settings file: #{e}"
  exit
end

speech = []

open(settings["speech_file"]).each do |line|
  speech << line.chomp if line.match(/^[^#]\w*/) # Doesn't start with a comment, and contains some text
end

logger.debug "Read #{speech.size} lines"

tweet = speech[Random.rand(speech.size)]

Twitter.configure do |config|
  config.consumer_key       = settings["consumer_key"]
  config.consumer_secret    = settings["consumer_secret"]
  config.oauth_token        = settings["access_token"]
  config.oauth_token_secret = settings["access_token_secret"]
end

begin
  Twitter.update(tweet) unless options[:notweet]
rescue Exception => e
  logger.error "Error tweeting (#{tweet}): #{e}"
end

